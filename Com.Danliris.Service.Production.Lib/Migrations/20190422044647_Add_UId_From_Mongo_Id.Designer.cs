// <auto-generated />
using System;
using Com.Danliris.Service.Production.Lib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Com.Danliris.Service.Production.Lib.Migrations
{
    [DbContext(typeof(ProductionDbContext))]
    [Migration("20190422044647_Add_UId_From_Mongo_Id")]
    partial class Add_UId_From_Mongo_Id
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Daily_Operation.DailyOperationBadOutputReasonsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<bool>("Active");

                    b.Property<string>("BadOutputCode");

                    b.Property<int>("BadOutputId");

                    b.Property<string>("BadOutputReason");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<int?>("DailyOperationId");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double?>("Length");

                    b.Property<string>("MachineCode");

                    b.Property<int>("MachineId");

                    b.Property<string>("MachineName");

                    b.HasKey("Id");

                    b.HasIndex("DailyOperationId");

                    b.ToTable("DailyOperationBadOutputReasons");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Daily_Operation.DailyOperationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double?>("BadOutput");

                    b.Property<string>("Code");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset?>("DateInput");

                    b.Property<DateTimeOffset?>("DateOutput");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<double?>("GoodOutput");

                    b.Property<double?>("Input");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("KanbanCode");

                    b.Property<int>("KanbanId");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MachineCode");

                    b.Property<int>("MachineId");

                    b.Property<string>("Shift");

                    b.Property<int>("StepId");

                    b.Property<string>("StepProcess");

                    b.Property<double?>("TimeInput");

                    b.Property<double?>("TimeOutput");

                    b.Property<string>("Type");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("KanbanId");

                    b.HasIndex("MachineId");

                    b.ToTable("DailyOperation");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.FabricQualityControl.CriteriaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int>("FabricGradeTestId");

                    b.Property<string>("Group");

                    b.Property<int>("Index");

                    b.Property<string>("Name");

                    b.Property<double>("ScoreA");

                    b.Property<double>("ScoreB");

                    b.Property<double>("ScoreC");

                    b.Property<double>("ScoreD");

                    b.HasKey("Id");

                    b.HasIndex("FabricGradeTestId");

                    b.ToTable("Criterion");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.FabricQualityControl.FabricGradeTestModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("AvalLength");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<double>("FabricGradeTest");

                    b.Property<int>("FabricQualityControlId");

                    b.Property<double>("FinalArea");

                    b.Property<double>("FinalGradeTest");

                    b.Property<double>("FinalLength");

                    b.Property<double>("FinalScore");

                    b.Property<string>("Grade")
                        .HasMaxLength(100);

                    b.Property<double>("InitLength");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PcsNo")
                        .HasMaxLength(100);

                    b.Property<double>("PointLimit");

                    b.Property<double>("PointSystem");

                    b.Property<double>("SampleLength");

                    b.Property<double>("Score");

                    b.Property<string>("Type")
                        .HasMaxLength(100);

                    b.Property<double>("Width");

                    b.HasKey("Id");

                    b.HasIndex("FabricQualityControlId");

                    b.ToTable("FabricGradeTests");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.FabricQualityControl.FabricQualityControlModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Buyer")
                        .HasMaxLength(250);

                    b.Property<string>("CartNo")
                        .HasMaxLength(250);

                    b.Property<string>("Code")
                        .HasMaxLength(25);

                    b.Property<string>("Color")
                        .HasMaxLength(250);

                    b.Property<string>("Construction")
                        .HasMaxLength(250);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("DateIm");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Group")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsUsed");

                    b.Property<string>("KanbanCode")
                        .HasMaxLength(25);

                    b.Property<int>("KanbanId");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MachineNoIm")
                        .HasMaxLength(250);

                    b.Property<string>("OperatorIm")
                        .HasMaxLength(250);

                    b.Property<double>("OrderQuantity");

                    b.Property<string>("PackingInstruction")
                        .HasMaxLength(500);

                    b.Property<double>("PointLimit");

                    b.Property<double>("PointSystem");

                    b.Property<string>("ProductionOrderNo")
                        .HasMaxLength(250);

                    b.Property<string>("ProductionOrderType")
                        .HasMaxLength(250);

                    b.Property<string>("ShiftIm")
                        .HasMaxLength(250);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("Uom")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("FabricQualityControls");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Kanban.KanbanInstructionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("KanbanId");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("KanbanId")
                        .IsUnique();

                    b.ToTable("KanbanInstructions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Kanban.KanbanModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("BadOutput");

                    b.Property<string>("CartCartNumber")
                        .HasMaxLength(100);

                    b.Property<string>("CartCode")
                        .HasMaxLength(100);

                    b.Property<double>("CartPcs");

                    b.Property<double>("CartQty");

                    b.Property<string>("CartUomUnit")
                        .HasMaxLength(100);

                    b.Property<string>("Code")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double>("CurrentQty");

                    b.Property<int>("CurrentStepIndex");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("FinishWidth")
                        .HasMaxLength(100);

                    b.Property<double>("GoodOutput");

                    b.Property<string>("Grade")
                        .HasMaxLength(100);

                    b.Property<int>("InstructionId");

                    b.Property<bool>("IsBadOutput");

                    b.Property<bool>("IsComplete");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsInactive");

                    b.Property<bool>("IsReprocess");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("OldKanbanId");

                    b.Property<string>("ProductionOrderBuyerCode");

                    b.Property<int>("ProductionOrderBuyerId");

                    b.Property<string>("ProductionOrderBuyerName");

                    b.Property<DateTimeOffset>("ProductionOrderDeliveryDate");

                    b.Property<string>("ProductionOrderHandlingStandard")
                        .HasMaxLength(100);

                    b.Property<int>("ProductionOrderId");

                    b.Property<string>("ProductionOrderMaterialCode")
                        .HasMaxLength(100);

                    b.Property<string>("ProductionOrderMaterialConstructionCode")
                        .HasMaxLength(100);

                    b.Property<int>("ProductionOrderMaterialConstructionId");

                    b.Property<string>("ProductionOrderMaterialConstructionName")
                        .HasMaxLength(500);

                    b.Property<int>("ProductionOrderMaterialId");

                    b.Property<string>("ProductionOrderMaterialName")
                        .HasMaxLength(500);

                    b.Property<string>("ProductionOrderOrderNo")
                        .HasMaxLength(100);

                    b.Property<string>("ProductionOrderOrderTypeCode")
                        .HasMaxLength(100);

                    b.Property<int>("ProductionOrderOrderTypeId");

                    b.Property<string>("ProductionOrderOrderTypeName")
                        .HasMaxLength(250);

                    b.Property<string>("ProductionOrderProcessTypeCode")
                        .HasMaxLength(100);

                    b.Property<int>("ProductionOrderProcessTypeId");

                    b.Property<string>("ProductionOrderProcessTypeName")
                        .HasMaxLength(250);

                    b.Property<string>("ProductionOrderSalesContractNo");

                    b.Property<string>("ProductionOrderYarnMaterialCode")
                        .HasMaxLength(100);

                    b.Property<int>("ProductionOrderYarnMaterialId");

                    b.Property<string>("ProductionOrderYarnMaterialName")
                        .HasMaxLength(250);

                    b.Property<string>("SelectedProductionOrderDetailColorRequest")
                        .HasMaxLength(250);

                    b.Property<string>("SelectedProductionOrderDetailColorTemplate")
                        .HasMaxLength(250);

                    b.Property<string>("SelectedProductionOrderDetailColorTypeCode")
                        .HasMaxLength(100);

                    b.Property<string>("SelectedProductionOrderDetailColorTypeName")
                        .HasMaxLength(250);

                    b.Property<int>("SelectedProductionOrderDetailId");

                    b.Property<double>("SelectedProductionOrderDetailQuantity");

                    b.Property<string>("SelectedProductionOrderDetailUomUnit")
                        .HasMaxLength(250);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Kanbans");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Kanban.KanbanStepIndicatorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<int>("StepId");

                    b.Property<string>("Uom")
                        .HasMaxLength(100);

                    b.Property<string>("Value")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("StepId");

                    b.ToTable("KanbanStepIndicators");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Kanban.KanbanStepModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Alias")
                        .HasMaxLength(100);

                    b.Property<string>("Code")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Deadline");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("InstructionId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("MachineId");

                    b.Property<string>("Process")
                        .HasMaxLength(500);

                    b.Property<string>("ProcessArea")
                        .HasMaxLength(500);

                    b.Property<int>("SelectedIndex");

                    b.HasKey("Id");

                    b.HasIndex("InstructionId");

                    b.HasIndex("MachineId");

                    b.ToTable("KanbanSteps");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.BadOutput.BadOutputMachineModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("BadOutputId");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MachineCode");

                    b.Property<int>("MachineId");

                    b.Property<string>("MachineName");

                    b.HasKey("Id");

                    b.HasIndex("BadOutputId");

                    b.ToTable("BadOutputMachine");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.BadOutput.BadOutputModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Reason");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("BadOutput");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.Machine.MachineEventsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Category");

                    b.Property<string>("Code");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("MachineId");

                    b.Property<string>("Name");

                    b.Property<string>("No");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("MachineEvents");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.Machine.MachineModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code");

                    b.Property<string>("Condition");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MachineTypeCode");

                    b.Property<int>("MachineTypeId");

                    b.Property<string>("MachineTypeName");

                    b.Property<string>("Manufacture");

                    b.Property<int>("MonthlyCapacity");

                    b.Property<string>("Name");

                    b.Property<string>("Process");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode");

                    b.Property<string>("UnitDivisionId");

                    b.Property<string>("UnitDivisionName");

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitName");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.Machine.MachineStepModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Alias");

                    b.Property<string>("Code");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("MachineId");

                    b.Property<string>("Process");

                    b.Property<string>("ProcessArea");

                    b.Property<int>("StepId");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("MachineSteps");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.MachineType.MachineTypeIndicatorsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DataType");

                    b.Property<string>("DefaultValue");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Indicator");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("MachineTypeId");

                    b.Property<string>("Uom");

                    b.HasKey("Id");

                    b.HasIndex("MachineTypeId");

                    b.ToTable("MachineTypeIndicators");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.MachineType.MachineTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("MachineType");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Monitoring_Event.MonitoringEventModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CartNumber");

                    b.Property<string>("Code");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("DateEnd");

                    b.Property<DateTimeOffset>("DateStart");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MachineEventCategory");

                    b.Property<string>("MachineEventCode");

                    b.Property<int>("MachineEventId");

                    b.Property<string>("MachineEventName");

                    b.Property<int>("MachineId");

                    b.Property<string>("MachineName");

                    b.Property<string>("ProductionOrderDeliveryDate");

                    b.Property<string>("ProductionOrderDetailCode");

                    b.Property<string>("ProductionOrderDetailColorRequest");

                    b.Property<string>("ProductionOrderDetailColorTemplate");

                    b.Property<string>("ProductionOrderDetailColorType");

                    b.Property<string>("ProductionOrderDetailColorTypeId");

                    b.Property<double>("ProductionOrderDetailQuantity");

                    b.Property<int>("ProductionOrderId");

                    b.Property<string>("ProductionOrderOrderNo");

                    b.Property<string>("Remark");

                    b.Property<double>("TimeInMilisEnd");

                    b.Property<double>("TimeInMilisStart");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("MonitoringEvent");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Monitoring_Specification_Machine.MonitoringSpecificationMachineDetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DataType");

                    b.Property<string>("DefaultValue");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Indicator");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("MonitoringSpecificationMachineId");

                    b.Property<string>("Uom");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("MonitoringSpecificationMachineId");

                    b.ToTable("MonitoringSpecificationMachineDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Monitoring_Specification_Machine.MonitoringSpecificationMachineModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CartNumber");

                    b.Property<string>("Code");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("DateTimeInput");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("MachineId");

                    b.Property<string>("MachineName");

                    b.Property<int>("ProductionOrderId");

                    b.Property<string>("ProductionOrderNo");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("MonitoringSpecificationMachine");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Packing.PackingDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Grade")
                        .HasMaxLength(100);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("Length");

                    b.Property<string>("Lot")
                        .HasMaxLength(250);

                    b.Property<int>("PackingId");

                    b.Property<int>("Quantity");

                    b.Property<string>("Remark")
                        .HasMaxLength(500);

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("PackingId");

                    b.ToTable("PackingDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Packing.PackingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Accepted");

                    b.Property<bool>("Active");

                    b.Property<string>("BuyerAddress")
                        .HasMaxLength(250);

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(25);

                    b.Property<int>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(250);

                    b.Property<string>("BuyerType")
                        .HasMaxLength(25);

                    b.Property<string>("Code")
                        .HasMaxLength(25);

                    b.Property<string>("ColorCode")
                        .HasMaxLength(250);

                    b.Property<string>("ColorName")
                        .HasMaxLength(250);

                    b.Property<string>("ColorType")
                        .HasMaxLength(250);

                    b.Property<string>("Construction")
                        .HasMaxLength(300);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<bool>("Declined");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DeliveryType")
                        .HasMaxLength(25);

                    b.Property<string>("DesignCode")
                        .HasMaxLength(250);

                    b.Property<string>("DesignNumber")
                        .HasMaxLength(250);

                    b.Property<string>("FinishedProductType")
                        .HasMaxLength(25);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Material")
                        .HasMaxLength(25);

                    b.Property<int>("MaterialConstructionFinishId");

                    b.Property<string>("MaterialConstructionFinishName")
                        .HasMaxLength(250);

                    b.Property<int>("MaterialId");

                    b.Property<string>("MaterialWidthFinish")
                        .HasMaxLength(25);

                    b.Property<string>("Motif")
                        .HasMaxLength(250);

                    b.Property<string>("OrderTypeCode")
                        .HasMaxLength(25);

                    b.Property<int>("OrderTypeId");

                    b.Property<string>("OrderTypeName")
                        .HasMaxLength(25);

                    b.Property<string>("PackingUom")
                        .HasMaxLength(25);

                    b.Property<int>("ProductionOrderId");

                    b.Property<string>("ProductionOrderNo")
                        .HasMaxLength(25);

                    b.Property<string>("SalesContractNo")
                        .HasMaxLength(25);

                    b.Property<string>("Status")
                        .HasMaxLength(25);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Packings");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.PackingReceipt.PackingReceiptItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("AvailableQuantity");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsDelivered");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("Length");

                    b.Property<string>("Notes");

                    b.Property<int>("PackingReceiptId");

                    b.Property<string>("Product");

                    b.Property<string>("ProductCode");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<string>("Remark");

                    b.Property<string>("Uom");

                    b.Property<int>("UomId");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("PackingReceiptId");

                    b.ToTable("PackingReceiptItem");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.PackingReceipt.PackingReceiptModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Accepted");

                    b.Property<bool>("Active");

                    b.Property<string>("Buyer");

                    b.Property<string>("Code");

                    b.Property<string>("ColorName");

                    b.Property<string>("ColorType");

                    b.Property<string>("Construction");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<bool>("Declined");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DesignCode");

                    b.Property<string>("DesignNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsVoid");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MaterialWidthFinish");

                    b.Property<string>("OrderType");

                    b.Property<string>("PackingCode");

                    b.Property<int>("PackingId");

                    b.Property<string>("PackingUom");

                    b.Property<string>("ProductionOrderNo");

                    b.Property<string>("ReferenceNo");

                    b.Property<string>("ReferenceType");

                    b.Property<string>("Remark");

                    b.Property<string>("StorageCode");

                    b.Property<string>("StorageDivisionCode");

                    b.Property<string>("StorageDivisionName");

                    b.Property<int>("StorageId");

                    b.Property<string>("StorageName");

                    b.Property<string>("StorageUnitCode");

                    b.Property<string>("StorageUnitName");

                    b.Property<string>("Type");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("PackingReceipt");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.ReturToQC.ReturToQCItemDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("ColorWay");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DesignCode");

                    b.Property<string>("DesignNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Length");

                    b.Property<string>("ProductCode");

                    b.Property<int>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("QuantityBefore");

                    b.Property<string>("Remark")
                        .HasMaxLength(500);

                    b.Property<double>("ReturQuantity");

                    b.Property<int>("ReturToQCItemId");

                    b.Property<string>("StorageCode");

                    b.Property<int>("StorageId");

                    b.Property<string>("StorageName");

                    b.Property<int>("UOMId");

                    b.Property<string>("UOMUnit");

                    b.Property<double>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ReturToQCItemId");

                    b.ToTable("ReturToQCItemDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.ReturToQC.ReturToQCItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("ProductionOrderCode");

                    b.Property<int>("ProductionOrderId");

                    b.Property<string>("ProductionOrderNo");

                    b.Property<int>("ReturToQCId");

                    b.HasKey("Id");

                    b.HasIndex("ReturToQCId");

                    b.ToTable("ReturToQCItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.ReturToQC.ReturToQCModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DeliveryOrderNo");

                    b.Property<string>("Destination");

                    b.Property<string>("FinishedGoodCode");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsVoid");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MaterialCode")
                        .HasMaxLength(25);

                    b.Property<string>("MaterialConstructionCode")
                        .HasMaxLength(25);

                    b.Property<int>("MaterialConstructionId");

                    b.Property<string>("MaterialConstructionName")
                        .HasMaxLength(250);

                    b.Property<int>("MaterialId");

                    b.Property<string>("MaterialName")
                        .HasMaxLength(250);

                    b.Property<string>("MaterialWidthFinish")
                        .HasMaxLength(25);

                    b.Property<string>("Remark")
                        .HasMaxLength(500);

                    b.Property<string>("ReturNo")
                        .HasMaxLength(25);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("ReturToQCs");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.ShipmentDocument.ShipmentDocumentDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("ProductionOrderColorType")
                        .HasMaxLength(250);

                    b.Property<string>("ProductionOrderDesignCode")
                        .HasMaxLength(250);

                    b.Property<string>("ProductionOrderDesignNumber")
                        .HasMaxLength(250);

                    b.Property<int>("ProductionOrderId");

                    b.Property<string>("ProductionOrderNo")
                        .HasMaxLength(250);

                    b.Property<string>("ProductionOrderType")
                        .HasMaxLength(250);

                    b.Property<int>("ShipmentDocumentId");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentDocumentId");

                    b.ToTable("ShipmentDocumentDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.ShipmentDocument.ShipmentDocumentItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PackingReceiptCode")
                        .HasMaxLength(250);

                    b.Property<int>("PackingReceiptId");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(250);

                    b.Property<string>("ReferenceType")
                        .HasMaxLength(250);

                    b.Property<int>("ShipmentDocumentDetailId");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentDocumentDetailId");

                    b.ToTable("ShipmentDocumentItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.ShipmentDocument.ShipmentDocumentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("BuyerAddress");

                    b.Property<string>("BuyerCity")
                        .HasMaxLength(250);

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(125);

                    b.Property<string>("BuyerContact")
                        .HasMaxLength(250);

                    b.Property<string>("BuyerCountry")
                        .HasMaxLength(250);

                    b.Property<int>("BuyerId");

                    b.Property<string>("BuyerNPWP")
                        .HasMaxLength(250);

                    b.Property<string>("BuyerName");

                    b.Property<string>("BuyerTempo")
                        .HasMaxLength(250);

                    b.Property<string>("BuyerType")
                        .HasMaxLength(250);

                    b.Property<string>("Code")
                        .HasMaxLength(250);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DeliveryCode")
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("DeliveryDate");

                    b.Property<string>("DeliveryReference")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsVoid");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("ProductIdentity")
                        .HasMaxLength(250);

                    b.Property<string>("ShipmentNumber")
                        .HasMaxLength(250);

                    b.Property<string>("StorageCode")
                        .HasMaxLength(250);

                    b.Property<string>("StorageDescription")
                        .HasMaxLength(1000);

                    b.Property<int>("StorageId");

                    b.Property<string>("StorageName")
                        .HasMaxLength(250);

                    b.Property<string>("StorageUnitCode")
                        .HasMaxLength(250);

                    b.Property<string>("StorageUnitName")
                        .HasMaxLength(250);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("ShipmentDocuments");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.ShipmentDocument.ShipmentDocumentPackingReceiptItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("ColorType")
                        .HasMaxLength(250);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DesignCode")
                        .HasMaxLength(250);

                    b.Property<string>("DesignNumber")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Length");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(250);

                    b.Property<int>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(500);

                    b.Property<double>("Quantity");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000);

                    b.Property<int>("ShipmentDocumentItemId");

                    b.Property<int>("UOMId");

                    b.Property<string>("UOMUnit")
                        .HasMaxLength(250);

                    b.Property<double>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentDocumentItemId");

                    b.ToTable("ShipmentDocumentPackingReceiptItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Production.Lib.Models.Master.DurationEstimation.DurationEstimationAreaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("Duration");

                    b.Property<int>("DurationEstimationId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("DurationEstimationId");

                    b.ToTable("DurationEstimationAreas");
                });

            modelBuilder.Entity("Com.Danliris.Service.Production.Lib.Models.Master.DurationEstimation.DurationEstimationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("OrderTypeCode")
                        .HasMaxLength(100);

                    b.Property<int>("OrderTypeId");

                    b.Property<string>("OrderTypeName")
                        .HasMaxLength(500);

                    b.Property<string>("ProcessTypeCode")
                        .HasMaxLength(100);

                    b.Property<int>("ProcessTypeId");

                    b.Property<string>("ProcessTypeName")
                        .HasMaxLength(500);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("DurationEstimations");
                });

            modelBuilder.Entity("Com.Danliris.Service.Production.Lib.Models.Master.Instruction.InstructionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Instructions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Production.Lib.Models.Master.Instruction.InstructionStepIndicatorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<int>("StepId");

                    b.Property<string>("Uom")
                        .HasMaxLength(100);

                    b.Property<string>("Value")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("StepId");

                    b.ToTable("InstructionStepIndicators");
                });

            modelBuilder.Entity("Com.Danliris.Service.Production.Lib.Models.Master.Instruction.InstructionStepModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Alias")
                        .HasMaxLength(100);

                    b.Property<string>("Code")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("InstructionId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Process")
                        .HasMaxLength(500);

                    b.Property<string>("ProcessArea")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("InstructionId");

                    b.ToTable("InstructionSteps");
                });

            modelBuilder.Entity("Com.Danliris.Service.Production.Lib.Models.Master.Step.StepIndicatorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.Property<int>("StepId");

                    b.Property<string>("Uom")
                        .HasMaxLength(500);

                    b.Property<string>("Value")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("StepId");

                    b.ToTable("StepIndicators");
                });

            modelBuilder.Entity("Com.Danliris.Service.Production.Lib.Models.Master.Step.StepModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Alias")
                        .HasMaxLength(500);

                    b.Property<string>("Code")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Process")
                        .HasMaxLength(500);

                    b.Property<string>("ProcessArea")
                        .HasMaxLength(500);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Daily_Operation.DailyOperationBadOutputReasonsModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.Daily_Operation.DailyOperationModel", "DailyOperation")
                        .WithMany("BadOutputReasons")
                        .HasForeignKey("DailyOperationId");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Daily_Operation.DailyOperationModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.Kanban.KanbanModel", "Kanban")
                        .WithMany()
                        .HasForeignKey("KanbanId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.Machine.MachineModel", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.FabricQualityControl.CriteriaModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.FabricQualityControl.FabricGradeTestModel", "FabricGradeTest")
                        .WithMany("Criteria")
                        .HasForeignKey("FabricGradeTestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.FabricQualityControl.FabricGradeTestModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.FabricQualityControl.FabricQualityControlModel", "FabricQualityControl")
                        .WithMany("FabricGradeTests")
                        .HasForeignKey("FabricQualityControlId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Kanban.KanbanInstructionModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.Kanban.KanbanModel", "Kanban")
                        .WithOne("Instruction")
                        .HasForeignKey("Com.Danliris.Service.Finishing.Printing.Lib.Models.Kanban.KanbanInstructionModel", "KanbanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Kanban.KanbanStepIndicatorModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.Kanban.KanbanStepModel", "Step")
                        .WithMany("StepIndicators")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Kanban.KanbanStepModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.Kanban.KanbanInstructionModel", "Instruction")
                        .WithMany("Steps")
                        .HasForeignKey("InstructionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.Machine.MachineModel", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.BadOutput.BadOutputMachineModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.BadOutput.BadOutputModel", "BadOutput")
                        .WithMany("MachineDetails")
                        .HasForeignKey("BadOutputId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.Machine.MachineEventsModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.Machine.MachineModel", "Machine")
                        .WithMany("MachineEvents")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.Machine.MachineStepModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.Machine.MachineModel", "Machine")
                        .WithMany("MachineSteps")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.MachineType.MachineTypeIndicatorsModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.Master.MachineType.MachineTypeModel", "MachineType")
                        .WithMany("Indicators")
                        .HasForeignKey("MachineTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Monitoring_Specification_Machine.MonitoringSpecificationMachineDetailsModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.Monitoring_Specification_Machine.MonitoringSpecificationMachineModel", "MonitoringSpecificationMachine")
                        .WithMany("Details")
                        .HasForeignKey("MonitoringSpecificationMachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.Packing.PackingDetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.Packing.PackingModel", "Packing")
                        .WithMany("PackingDetails")
                        .HasForeignKey("PackingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.PackingReceipt.PackingReceiptItem", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.PackingReceipt.PackingReceiptModel", "PackingReceipt")
                        .WithMany("Items")
                        .HasForeignKey("PackingReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.ReturToQC.ReturToQCItemDetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.ReturToQC.ReturToQCItemModel", "ReturToQCItem")
                        .WithMany("ReturToQCItemDetails")
                        .HasForeignKey("ReturToQCItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.ReturToQC.ReturToQCItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.ReturToQC.ReturToQCModel", "ReturToQC")
                        .WithMany("ReturToQCItems")
                        .HasForeignKey("ReturToQCId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.ShipmentDocument.ShipmentDocumentDetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.ShipmentDocument.ShipmentDocumentModel", "ShipmentDocument")
                        .WithMany("Details")
                        .HasForeignKey("ShipmentDocumentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.ShipmentDocument.ShipmentDocumentItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.ShipmentDocument.ShipmentDocumentDetailModel", "ShipmentDocumentDetail")
                        .WithMany("Items")
                        .HasForeignKey("ShipmentDocumentDetailId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finishing.Printing.Lib.Models.ShipmentDocument.ShipmentDocumentPackingReceiptItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finishing.Printing.Lib.Models.ShipmentDocument.ShipmentDocumentItemModel", "ShipmentDocumentItem")
                        .WithMany("PackingReceiptItems")
                        .HasForeignKey("ShipmentDocumentItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Production.Lib.Models.Master.DurationEstimation.DurationEstimationAreaModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Production.Lib.Models.Master.DurationEstimation.DurationEstimationModel", "DurationEstimation")
                        .WithMany("Areas")
                        .HasForeignKey("DurationEstimationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Production.Lib.Models.Master.Instruction.InstructionStepIndicatorModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Production.Lib.Models.Master.Instruction.InstructionStepModel", "Step")
                        .WithMany("StepIndicators")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Production.Lib.Models.Master.Instruction.InstructionStepModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Production.Lib.Models.Master.Instruction.InstructionModel", "Instruction")
                        .WithMany("Steps")
                        .HasForeignKey("InstructionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Production.Lib.Models.Master.Step.StepIndicatorModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Production.Lib.Models.Master.Step.StepModel", "Step")
                        .WithMany("StepIndicators")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
